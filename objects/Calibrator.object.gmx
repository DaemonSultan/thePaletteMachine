<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x1 = 0;
y1 = 0;
x2 = 0;
y2 = 0;
functioning = false;
bold = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!functioning) exit;
if(mouse_check_button(mb_left)){
    x2 = mouse_x;
    y2 = mouse_y;
}

switch(keyboard_key){
    case ord('W'): y1--; y2--; break;
    case ord('A'): x1--; x2--; break;
    case ord('S'): y1++; y2++; break;
    case ord('D'): x1++; x2++; break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!functioning) exit;
x1 = mouse_x;
y1 = mouse_y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!functioning) exit;
var cal_left = min(x1, x2);
var cal_right = max(x1, x2);
var cal_top = min(y1, y2);
var cal_bottom = max(y1, y2);

draw_set_color(c_green);
draw_rectangle(cal_left, cal_top, cal_right, cal_bottom, true);
if(bold){
    draw_rectangle(cal_left - 1, cal_top - 1, cal_right - 1, cal_bottom - 1, true);
    draw_rectangle(cal_left + 1, cal_top + 1, cal_right + 1, cal_bottom + 1, true);
}
draw_circle(cal_left, cal_top, 3 + 2*bold, false);
draw_circle(cal_left, cal_bottom, 3 + 2*bold, false);
draw_circle(cal_right, cal_top, 3 + 2*bold, false);
draw_circle(cal_right, cal_bottom, 3 + 2*bold, false);

draw_set_color(c_black);
draw_set_font(Arial12);  // comment this if needed.
var str = "";
if(point_distance(mouse_x, mouse_y, cal_left, cal_top) &lt;= 5){
    str = string(cal_left) + ", " + string(cal_top);
    draw_text(mouse_x, mouse_y, str);
}else if(point_distance(mouse_x, mouse_y, cal_right, cal_top) &lt;= 5){
    str = string(cal_right) + ", " + string(cal_top);
    draw_text(mouse_x, mouse_y, str);
}else if(point_distance(mouse_x, mouse_y, cal_left, cal_bottom) &lt;= 5){
    str = string(cal_left) + ", " + string(cal_bottom);
    draw_text(mouse_x, mouse_y, str);
}else if(point_distance(mouse_x, mouse_y, cal_right, cal_bottom) &lt;= 5){
    str = string(cal_right) + ", " + string(cal_bottom);
    draw_text(mouse_x, mouse_y, str);
}else{
    if(point_in_rectangle(mouse_x, mouse_y, cal_left - 1, cal_top - 1, cal_right + 1 , cal_top + 1) or point_in_rectangle(mouse_x, mouse_y, cal_left - 1, cal_bottom - 1, cal_right + 1 , cal_bottom + 1)){ // width
        str = string(abs(cal_right - cal_left));
        draw_text(mouse_x, mouse_y, str);
    }else if(point_in_rectangle(mouse_x, mouse_y, cal_left - 1, cal_top - 1, cal_left + 1 , cal_bottom + 1) or point_in_rectangle(mouse_x, mouse_y, cal_right - 1, cal_top - 1, cal_right + 1 , cal_bottom + 1)){ // height
        str = string(abs(cal_bottom - cal_top));
        draw_text(mouse_x, mouse_y, str);
    }else{
        if(point_in_rectangle(mouse_x, mouse_y, cal_left, cal_top, cal_right, cal_bottom)){
            str = string(cal_right - cal_left) + "* " + string(cal_bottom - cal_top);
            draw_text(mouse_x, mouse_y, str);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="67">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>functioning = (1 - functioning);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="66">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!functioning) exit;
bold = (1 - bold);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
